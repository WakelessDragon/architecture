<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <mvc:annotation-driven validator="validator"/>

    <context:component-scan base-package="com.rainyalley.architecture.boot" use-default-filters="false">
        <!-- 扫描符合@Controller的类 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <mvc:resources mapping="/favicon.ico" location="resources"/>
    <mvc:resources mapping="/resources/**" location="resources"/>

    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="global/500"/>
        <property name="defaultStatusCode" value="500"/>
        <property name="warnLogCategory" value="top.rainynight.site"/>
    </bean>

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
            </list>
        </property>
    </bean>

    <!-- 解析操作交给org.springframework.web.servlet.DispatcherServlet处理时id必须为multipartResolver -->
    <!-- 解析操作交给org.springframework.web.multipart.support.MultipartFilter处理时id必须为filterMultipartResolver,
        且该Bean必须配置在web.xml中contextConfigLocation的指定文件中 -->
    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>-->
    <!-- 若使用的Spring版本为4.0,Servlet版本为3.0,且已配置multipartFilter,在DispatcherServlet下已配置开启<multipart-config/>,
        则该过滤器会自动创建filterMultipartResolver,无需任何配置 -->
    <!--@see{ org.springframework.web.multipart.support.MultipartFilter#DEFAULT_MULTIPART_RESOLVER_BEAN_NAME }-->
    <bean id="filterMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <!-- <property name="maxUploadSize" value="204800"/> -->
    </bean>
</beans>