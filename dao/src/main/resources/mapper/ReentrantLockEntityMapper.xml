<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rainyalley.architecture.mapper.ReentrantLockEntityMapper">
  <resultMap id="BaseResultMap" type="com.rainyalley.architecture.entity.ReentrantLockEntity">
    <id column="target" jdbcType="VARCHAR" property="target" />
    <result column="acquire_time" jdbcType="TIMESTAMP" property="acquireTime" />
    <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime" />
    <result column="entrant_count" jdbcType="INTEGER" property="entrantCount" />
    <result column="lock_keeper" jdbcType="VARCHAR" property="lockKeeper" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    target, acquire_time, expire_time, entrant_count, lock_keeper
  </sql>
  <select id="selectByExample" parameterType="com.rainyalley.architecture.entity.ReentrantLockEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from reentrant_lock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reentrant_lock
    where target = #{target,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from reentrant_lock
    where target = #{target,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.rainyalley.architecture.entity.ReentrantLockEntityExample">
    delete from reentrant_lock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rainyalley.architecture.entity.ReentrantLockEntity">
    insert into reentrant_lock (target, acquire_time, expire_time,
      entrant_count, lock_keeper)
    SELECT * FROM (SELECT #{target,jdbcType=VARCHAR}, #{acquireTime,jdbcType=TIMESTAMP}, #{expireTime,jdbcType=TIMESTAMP},
      #{entrantCount,jdbcType=INTEGER}, #{lockKeeper,jdbcType=VARCHAR}) as tmp
    WHERE NOT EXISTS (
                SELECT target FROM reentrant_lock WHERE target = #{target,jdbcType=VARCHAR}
            ) LIMIT 1;
  </insert>
  <insert id="insertSelective" parameterType="com.rainyalley.architecture.entity.ReentrantLockEntity">
    insert into reentrant_lock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="target != null">
        target,
      </if>
      <if test="acquireTime != null">
        acquire_time,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
      <if test="entrantCount != null">
        entrant_count,
      </if>
      <if test="lockKeeper != null">
        lock_keeper,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="target != null">
        #{target,jdbcType=VARCHAR},
      </if>
      <if test="acquireTime != null">
        #{acquireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entrantCount != null">
        #{entrantCount,jdbcType=INTEGER},
      </if>
      <if test="lockKeeper != null">
        #{lockKeeper,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rainyalley.architecture.entity.ReentrantLockEntityExample" resultType="java.lang.Long">
    select count(*) from reentrant_lock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reentrant_lock
    <set>
      <if test="record.target != null">
        target = #{record.target,jdbcType=VARCHAR},
      </if>
      <if test="record.acquireTime != null">
        acquire_time = #{record.acquireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expireTime != null">
        expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.entrantCount != null">
        entrant_count = #{record.entrantCount,jdbcType=INTEGER},
      </if>
      <if test="record.lockKeeper != null">
        lock_keeper = #{record.lockKeeper,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reentrant_lock
    set target = #{record.target,jdbcType=VARCHAR},
      acquire_time = #{record.acquireTime,jdbcType=TIMESTAMP},
      expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      entrant_count = #{record.entrantCount,jdbcType=INTEGER},
      lock_keeper = #{record.lockKeeper,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rainyalley.architecture.entity.ReentrantLockEntity">
    update reentrant_lock
    <set>
      <if test="acquireTime != null">
        acquire_time = #{acquireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null">
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entrantCount != null">
        entrant_count = #{entrantCount,jdbcType=INTEGER},
      </if>
      <if test="lockKeeper != null">
        lock_keeper = #{lockKeeper,jdbcType=VARCHAR},
      </if>
    </set>
    where target = #{target,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rainyalley.architecture.entity.ReentrantLockEntity">
    update reentrant_lock
    set acquire_time = #{acquireTime,jdbcType=TIMESTAMP},
      expire_time = #{expireTime,jdbcType=TIMESTAMP},
      entrant_count = #{entrantCount,jdbcType=INTEGER},
      lock_keeper = #{lockKeeper,jdbcType=VARCHAR}
    where target = #{target,jdbcType=VARCHAR}
  </update>
</mapper>