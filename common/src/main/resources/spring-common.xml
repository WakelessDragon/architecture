<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <context:property-placeholder location="classpath:environment.properties,redis.properties"/>

    <context:component-scan base-package="com.rainyalley.architecture.common.user.service" use-default-filters="false">
        <!-- 扫描符合@Service的类 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!-- enables scanning for @Transactional annotations -->
    <tx:annotation-driven transaction-manager="transactionManager" order="999"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="masterDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="url" value="${jdbc.master.url}"/>
        <property name="username" value="${jdbc.master.username}"/>
        <property name="password" value="${jdbc.master.password}"/>
        <property name="driverClassName" value="${jdbc.master.driver}"/>
        <property name="maxActive" value="${connection.pools.master.maxActive}"/>
        <property name="maxIdle" value="${connection.pools.master.maxIdle}"/>
        <property name="maxWait" value="${connection.pools.master.maxWait}"/>
        <property name="defaultAutoCommit" value="${connection.pools.master.defaultAutoCommit}"/>
        <property name="removeAbandoned" value="${connection.pools.master.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${connection.pools.master.removeAbandonedTimeout}"/>
        <property name="validationQuery" value="${connection.pools.master.validationQuery}"/>
    </bean>

    <bean id="slaveDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="url" value="${jdbc.slave.url}"/>
        <property name="username" value="${jdbc.slave.username}"/>
        <property name="password" value="${jdbc.slave.password}"/>
        <property name="driverClassName" value="${jdbc.slave.driver}"/>
        <property name="maxActive" value="${connection.pools.slave.maxActive}"/>
        <property name="maxIdle" value="${connection.pools.slave.maxIdle}"/>
        <property name="maxWait" value="${connection.pools.slave.maxWait}"/>
        <property name="defaultAutoCommit" value="${connection.pools.slave.defaultAutoCommit}"/>
        <property name="removeAbandoned" value="${connection.pools.slave.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${connection.pools.slave.removeAbandonedTimeout}"/>
        <property name="validationQuery" value="${connection.pools.slave.validationQuery}"/>
    </bean>

    <bean id="dataSource" class="com.rainyalley.architecture.common.datasource.KeywordDataSourceRouter">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="slave" value-ref="slaveDataSource"/>
                <entry key="master" value-ref="masterDataSource"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="masterDataSource"/>
        <property name="pointContextProvider" ref="pointContextCollectAspect"/>
    </bean>

    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.rainyalley.architecture.common.user.dao"/>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:com/rainyalley/architecture/common/**/dao/**.xml"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.max_total}" />
        <property name="minIdle" value="${redis.min_idle}" />
        <property name="maxIdle" value="${redis.max_idle}" />
        <property name="maxWaitMillis" value="${redis.max_wait}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
        <property name="testOnReturn" value="${redis.testOnReturn}" />
        <property name="testWhileIdle" value="${redis.testWhileIdle}" />
    </bean>

    <bean id="jedisShardSentinel1" class="redis.clients.jedis.JedisSentinelPool">
        <constructor-arg index="0" value="shard01"/>
        <constructor-arg index="1">
            <set>
                <value>127.0.0.1:26379</value>
                <value>127.0.0.1:26380</value>
                <value>127.0.0.1:26381</value>
            </set>
        </constructor-arg>
        <constructor-arg index="2" ref="jedisPoolConfig"/>
    </bean>

    <bean id="jedisShardSentinel2" class="redis.clients.jedis.JedisSentinelPool">
        <constructor-arg index="0" value="shard02"/>
        <constructor-arg index="1">
            <set>
                <value>127.0.0.1:26379</value>
                <value>127.0.0.1:26380</value>
                <value>127.0.0.1:26381</value>
            </set>
        </constructor-arg>
        <constructor-arg index="2" ref="jedisPoolConfig"/>
    </bean>


    <bean id="shardedSentinelJedisPool" class="com.rainyalley.architecture.common.datasource.ShardedSentinelJedisPool">
        <constructor-arg index="0" >
                <list>
                    <bean class="com.rainyalley.architecture.common.datasource.JedisShardSentinelInfo">
                        <constructor-arg index="0" ref="jedisShardSentinel1"/>
                        <constructor-arg index="1" value="shard1"/>
                        <constructor-arg index="2" value="100"/>
                    </bean>
                    <bean class="com.rainyalley.architecture.common.datasource.JedisShardSentinelInfo">
                        <constructor-arg index="0" ref="jedisShardSentinel2"/>
                        <constructor-arg index="1" value="shard2"/>
                        <constructor-arg index="2" value="100"/>
                    </bean>
                </list>
        </constructor-arg>
    </bean>


    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <!-- <property name="validationMessageSource" ref="validationMessageSource"/>-->
    </bean>

    <!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
    <!--    <bean id="validationMessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
            <property name="basenames">
                <list>
                    &lt;!&ndash; 在web环境中一定要定位到classpath 否则默认到当前web应用下找  &ndash;&gt;
                    <value>classpath:messages/validationMessages</value>
                    <value>classpath:org/hibernate/validator/ValidationMessages</value>
                </list>
            </property>
            <property name="useCodeAsDefaultMessage" value="false"/>
            <property name="defaultEncoding" value="UTF-8"/>
            <property name="cacheSeconds" value="60"/>
        </bean>-->

    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"/>

    <aop:config>
        <aop:pointcut id="serviceInvocationPointcut"
                      expression="execution(public * com.rainyalley.architecture.common.ServiceBasicSupport.*(..))
                              or  execution(public * com.rainyalley.architecture.common..service..*.*(..))"/>

        <aop:aspect ref="invokeCacheAspect" order="0">
            <aop:around pointcut-ref="serviceInvocationPointcut" method="around"/>
        </aop:aspect>

        <aop:aspect ref="pointContextCollectAspect" order="1">
            <aop:before pointcut-ref="serviceInvocationPointcut" method="weave"/>
        </aop:aspect>

        <aop:aspect ref="loggerAspect">
            <aop:after-returning pointcut-ref="serviceInvocationPointcut" method="afterReturning" returning="result"/>
            <aop:after-throwing pointcut-ref="serviceInvocationPointcut" method="afterThrowing" throwing="throwable"/>
        </aop:aspect>

    </aop:config>
    <bean id="pointContextCollectAspect" class="com.rainyalley.architecture.common.aop.PointContextCollectAspect"/>
    <bean id="loggerAspect" class="com.rainyalley.architecture.common.aop.LoggerAspect"/>
    <bean id="invokeCacheAspect" class="com.rainyalley.architecture.common.aop.InvokeCacheAspect">
        <property name="cacheProvider">
            <bean class="com.rainyalley.architecture.common.cache.EhCacheProvider">
                <constructor-arg ref="ehcache"/>
            </bean>
        </property>
    </bean>
</beans>
